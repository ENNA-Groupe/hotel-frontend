{"version":3,"sources":["src/app/pages/public/login/login.page.html","src/app/pages/public/login/login.module.ts","src/app/pages/public/login/login.page.scss","src/app/pages/public/login/login.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <ion-list>\\n    <ion-list-header>\\n      <ion-label>Connexion</ion-label>\\n    </ion-list-header>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Username</ion-label>\\n      <ion-input formControlName=\\\"identifiant\\\" type=\\\"text\\\" spellcheck=\\\"false\\\" autocapitalize=\\\"off\\\" required>\\n      </ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\" color=\\\"primary\\\">Password</ion-label>\\n      <ion-input formControlName=\\\"password\\\" type=\\\"{{passwordType}}\\\" required>\\n      </ion-input>\\n      <ion-button fill=\\\"clear\\\" slot=\\\"end\\\" (click)=\\\"onSeePassword()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" *ngIf=\\\"passwordType==='password'\\\" name=\\\"eye\\\"></ion-icon>\\n        <ion-icon slot=\\\"icon-only\\\"*ngIf=\\\"passwordType==='text'\\\" name=\\\"eye-off\\\"></ion-icon>\\n      </ion-button>\\n    </ion-item>\\n\\n    <ion-text class=\\\"ion-padding-start\\\" color=\\\"danger\\\"\\n      *ngIf=\\\"(identifiant.invalid && (identifiant.dirty || identifiant.touched))\\\">\\n      <small *ngIf=\\\"identifiant.errors.required\\\">\\n        L' identifiant est requis.\\n      </small>\\n      <small *ngIf=\\\"identifiant.errors.minlength\\\">\\n        L' identifiant doit être superieur à 4 characteres.\\n      </small>\\n      <small *ngIf=\\\"identifiant.errors.maxlength\\\">\\n        L' identifiant doit être inferieur à 30 characteres.\\n      </small>\\n    </ion-text>\\n    <ion-text class=\\\"ion-padding-start\\\" color=\\\"danger\\\"\\n    *ngIf=\\\"(password.invalid && (password.dirty || password.touched))\\\">\\n      <small *ngIf=\\\"password.errors.required\\\">\\n        Le mot de passe est requis.\\n      </small>\\n      <small *ngIf=\\\"password.errors.minlength\\\">\\n        Le mot de passe doit être superieur à 8 characteres.\\n      </small>\\n      <small *ngIf=\\\"password.errors.maxlength\\\">\\n        Le mot de passe doit être inferieur à 20 characteres.\\n      </small>\\n    </ion-text>\\n  </ion-list>\\n\\n  <ion-row>\\n    <ion-col>\\n      <ion-button [disabled]=\\\"!form.valid\\\" type=\\\"submit\\\" expand=\\\"block\\\">Login</ion-button>\\n    </ion-col>\\n  </ion-row>\\n</form>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"ion-item {\\n  --background: transparent !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHVibGljL2xvZ2luL0M6XFxVc2Vyc1xcQXJvYW1cXERlc2t0b3BcXGhvdGVsL3NyY1xcYXBwXFxwYWdlc1xccHVibGljXFxsb2dpblxcbG9naW4ucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9wdWJsaWMvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksb0NBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3B1YmxpYy9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taXRlbXtcclxuICAgIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcclxufSIsImlvbi1pdGVtIHtcbiAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  form: FormGroup;\n  passwordType = 'password';\n  constructor(\n    public authService: AuthService,\n    public router: Router\n  ) { }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  initForm(){\n    this.form = new FormGroup({\n      identifiant: new FormControl('', [Validators.required, Validators.minLength(4)]),\n      password: new FormControl('', [Validators.required, Validators.minLength(8)]) \n    });\n  }\n\n  get identifiant() { return this.form.get('identifiant'); };\n  get password() { return this.form.get('password'); };\n\n  onSeePassword() {\n    if (this.passwordType === 'password') this.passwordType = 'text';\n    else this.passwordType = 'password';\n  }\n\n  onSubmit(){\n    console.log( this.form.value);\n   this.authService.login(this.form.value).then(\n     (isAuth: any) => {\n       if(isAuth) {\n         if(this.form.value.password==='password')this.router.navigate(['public/change-password']);\n         else this.router.navigate(['private']);\n       }\n      }\n   );\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"login-login-module-es5.js"}